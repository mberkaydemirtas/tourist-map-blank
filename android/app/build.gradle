// android/app/build.gradle

apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// 'expo' plugin'i yalnƒ±zca varsa uygula
if (gradle.ext.has("EXPO_PLUGIN_AVAILABLE") && gradle.ext.EXPO_PLUGIN_AVAILABLE) {
  apply plugin: "expo"
} else {
  logger.lifecycle("‚ÑπÔ∏è Skipping 'expo' plugin: not available.")
}

def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()

react {
  entryFile = file(new File(projectRoot, "index.js"))

  reactNativeDir = new File(["node", "--print", "require.resolve('react-native/package.json')"]
    .execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()

  hermesCommand = new File(["node", "--print", "require.resolve('react-native/package.json')"]
    .execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + "/sdks/hermesc/%OS-BIN%/hermesc"

  codegenDir = new File(["node", "--print", "require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })"]
    .execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()

  cliFile = new File(["node", "--print", "require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })"]
    .execute(null, rootDir).text.trim())

  bundleCommand = "export:embed"
  autolinkLibrariesWithApp()
}


def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInReleaseBuilds') ?: false).toBoolean()

// JSC (Hermes kapalƒ±ysa kullanƒ±lacak)
def jscFlavor = 'org.webkit:android-jsc:+'

def FRESCO_VERSION = (findProperty('expo.fresco.version') ?: "3.3.0")
def HERMES_ENABLED = (findProperty('hermesEnabled') ?: "true").toBoolean()

android {
  namespace "com.anonymous.touristmapblank"

  // üîß compileSdkVersion'ƒ± a√ßƒ±k√ßa yazƒ±yoruz (AGP 8 mesajƒ±nƒ± susturur)
  compileSdkVersion 35

  defaultConfig {
    applicationId "com.anonymous.touristmapblank"
    minSdkVersion 24
    targetSdkVersion 35
    versionCode 1
    versionName "1.0.0"

    // Em√ºlat√∂r i√ßin ABI kƒ±sƒ±tlamak istersen a√ß:
    // ndk { abiFilters "arm64-v8a", "x86_64" }
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      signingConfig signingConfigs.debug
      shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
      crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
  kotlinOptions { jvmTarget = "17" }

  packagingOptions {
    jniLibs { useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false) }
    resources { excludes += ["META-INF/**"] }
  }

  androidResources {
    ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'
  }
}

dependencies {
  implementation("com.facebook.react:react-android")
  implementation "com.google.android.gms:play-services-location:21.0.1"
  implementation("com.google.android.material:material:1.12.0")
  implementation("androidx.activity:activity:1.9.2")

  // Expo mod√ºlleri autolinking ile gelir; 'expo-modules-core'ƒ± elle ekleme

  if (HERMES_ENABLED) {
    implementation("com.facebook.react:hermes-android")
  } else {
    implementation jscFlavor
  }

  // (Opsiyonel) Fresco eklentileri
  def isGifEnabled = (findProperty('expo.gif.enabled') ?: "") == "true";
  def isWebpEnabled = (findProperty('expo.webp.enabled') ?: "") == "true";
  def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: "") == "true";
  if (isGifEnabled) implementation("com.facebook.fresco:animated-gif:${FRESCO_VERSION}")
  if (isWebpEnabled) {
    implementation("com.facebook.fresco:webpsupport:${FRESCO_VERSION}")
    if (isWebpAnimatedEnabled) implementation("com.facebook.fresco:animated-webp:${FRESCO_VERSION}")
  }
}
